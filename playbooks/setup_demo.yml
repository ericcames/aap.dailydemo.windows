---
- name: Setup windows daily demo
  hosts: localhost
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    my_organization: "IT Service Automation"
    my_vault: ""
    my_aap_credential: Controller Credential
    my_aws_credential: AWS
    my_aws_machine_credential: ""
    timezone_id: ""
    my_snow_caller_name: service.ansible
    my_username: service.ansible
    aap_configuration_async_retries: 60

  tasks:

    # fail with good error for Automation controller user
    - name: Determine that both AAP and Machine credentials are set
      ansible.builtin.assert:
        that:
          - "lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') !=''"
          - "lookup('ansible.builtin.env', 'CONTROLLER_HOST') !=''"
          - "lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') !=''"
        fail_msg:
          - "Red Hat Ansible Automation Platform credential is not set"
          - "Please assign correct credentials to the Job Template"

    - name: Create a new token
      ansible.platform.token:
        aap_hostname: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}"
        aap_username: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
        aap_password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
        aap_validate_certs: false
        description: Windows Setup
        scope: write
        state: present

    - name: Grab vault from remote url
      ansible.builtin.get_url:
        url: '{{ my_remote_vault }}'
        dest: files/config_as_code/remotevault.yml
        mode: '0644'

    - name: Include configurations
      ansible.builtin.include_vars:
        dir: files/config_as_code

    - name: Demo Components
      vars:
        meta_dependency_check: false  # noqa: var-naming[no-role-prefix]
      ansible.builtin.include_role:
        name: infra.aap_configuration.dispatch

    - name: Print Message
      when: user_message is defined
      ansible.builtin.debug:
        msg: "{{ user_message }}"

    - name: Remove my token
      ansible.platform.token:
        aap_hostname: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}"
        existing_token: "{{ aap_token }}"
        aap_validate_certs: false
        state: absent
