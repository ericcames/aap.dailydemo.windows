---
- name: Check for our mandatory variables
  # You can create a custom credential for the mandatory variables
  ansible.builtin.assert:
    that:
      - controller_url is defined
      - controller_user is defined
      - controller_passwd is defined
    fail_msg: "Please make sure your mandatory variables are set"
    success_msg: "All mandatory variables have been set"

- name: Capture inventory sync time
  ansible.builtin.set_fact:
    aws_sync_time: "{{ lookup('pipe', 'date \"+%H:%M:%S\"') }}"

- name: Publish to workflow artifacts
  ansible.builtin.set_stats:
    data:
      aws_sync_time: "{{ aws_sync_time }}"

- name: Get Windows Daily Demo instances
  register: instance_info
  amazon.aws.ec2_instance_info:
    region: "{{ region }}"
    filters:
      tag:Name: Windows Daily Demo
      instance-state-name: [running]

- name: Create a new token using username/password
  ansible.controller.token:
    controller_host: https://{{ controller_url }}
    controller_username: "{{ controller_user }}"
    controller_password: "{{ controller_passwd }}"
    validate_certs: false
    description: Daily Demo token
    scope: write
    state: present

- name: Update the AAP Managed Inventory with the Windows Daily Demo servers
  loop: "{{ instance_info['instances'] }}"
  ansible.controller.host:
    controller_host: https://{{ controller_url }}
    controller_oauthtoken: "{{ controller_token }}"
    validate_certs: false
    name: "{{ item['public_dns_name'] }}"
    inventory: "{{ managed_inventory_name }}"
    state: present
    enabled: true

- name: Create a group for our Windows Daily Demo servers using winrm
  loop: "{{ instance_info['instances'] }}"
  ansible.controller.group:
    controller_host: https://{{ controller_url }}
    controller_oauthtoken: "{{ controller_token }}"
    validate_certs: false
    name: windemo
    description: Automation Controller Group
    inventory: "{{ managed_inventory_name }}"
    hosts: "{{ item['public_dns_name'] }}"
    preserve_existing_hosts: true
    variables:
      ansible_connection: winrm
      ansible_winrm_transport: credssp
      ansible_winrm_server_cert_validation: ignore
      ansible_port: 5986
      ansible_winrm_operation_timeout_sec: 120
      ansible_winrm_read_timeout_sec: 80

- name: Update runtime inventory
  loop: "{{ instance_info['instances'] }}"
  ansible.builtin.add_host:
    name: "{{ item['public_dns_name'] }}"
    groups:
      - windemo

- name: Capture public ip address
  ansible.builtin.set_fact:
    my_public_ip: "{{ instance_info.instances[0].public_ip_address }}"
